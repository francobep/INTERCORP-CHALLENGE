gcloud projects add-iam-policy-binding elegant-door-738 --member "serviceAccount:terraform@elegan
t-door-738.iam.gserviceaccount.com" --role "roles/owner"
Updated IAM policy for project [elegant-door-738].
bindings:
- members:
  - serviceAccount:service-125119493739@compute-system.iam.gserviceaccount.com
  role: roles/compute.serviceAgent
- members:
  - serviceAccount:service-125119493739@container-engine-robot.iam.gserviceaccount.com
  role: roles/container.serviceAgent
- members:
  - serviceAccount:125119493739-compute@developer.gserviceaccount.com
  - serviceAccount:125119493739@cloudservices.gserviceaccount.com
  - serviceAccount:elegant-door-738@appspot.gserviceaccount.com
  - serviceAccount:service-125119493739@containerregistry.iam.gserviceaccount.com
  role: roles/editor
- members:
  - serviceAccount:terraform@elegant-door-738.iam.gserviceaccount.com
  - user:francobep@gmail.com
  role: roles/owner
etag: BwWdE77xWKU=
version: 1

#gcloud iam service-accounts keys create key.json --iam-account terraform@elegant-door-738.iam.gserviceaccount.com

created key [96832a95a2804fdedb232f7fae47a9c7e38bfa58] of type [json] as [key.json] for [terraform@elegant-door-738.iam.gserviceaccount.com]

export GOOGLE_APPLICATION_CREDENTIALS="$PWD/key.json"

terraform init -backend-config=bucket=intercorpchallenge-terraform-state
Initializing modules...
Initializing the backend...
Successfully configured the backend "gcs"! Terraform will automatically
use this backend unless the backend configuration changes.
Initializing provider plugins...
- Checking for available provider plugins...
- Downloading plugin for provider "random" (hashicorp/random) 2.1.1...
- Downloading plugin for provider "google" (hashicorp/google) 2.5.1...
Terraform has been successfully initialized!
You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.
If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.

terraform validate
Success! The configuration is valid.

francobep@cloudshell:~/INTERCORP-CHALLENGE/template (elegant-door-738)$ terraform validate
Success! The configuration is valid.
francobep@cloudshell:~/INTERCORP-CHALLENGE/template (elegant-door-738)$ terraform apply
An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create
Terraform will perform the following actions:
  # google_compute_network.vpc_network will be created
  + resource "google_compute_network" "vpc_network" {
      + auto_create_subnetworks         = false
      + delete_default_routes_on_create = false
      + gateway_ipv4                    = (known after apply)
